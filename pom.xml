<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.revature</groupId>
	<artifactId>gambit-gateway-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>gambit-gateway-service</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.12.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- DevTools for automatic reload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Config Client -->
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- Zuul -->
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zuul</artifactId>
        </dependency>
        
        <!-- Eureka Client -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

		<!-- For Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Docker Maven Plugin from Spotify -->
			<!-- Abstracts the process of creating Docker images from Java projects -->
			<!--<plugin>-->
				<!--<groupId>com.spotify</groupId>-->
				<!--<artifactId>docker-maven-plugin</artifactId>-->
				<!--<version>0.4.10</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<phase>package</phase>-->
						<!--<goals>-->
							<!--<goal>build</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--&lt;!&ndash; Docker Plugin Configuration &ndash;&gt;-->
				<!--<configuration>-->
					<!--&lt;!&ndash; Dynamically generating image name from project name &ndash;&gt;-->
					<!--<imageName>gambit/${project.artifactId}</imageName>-->

					<!--&lt;!&ndash; Virtual Machine with Docker location &ndash;&gt;-->
					<!--<dockerHost>${env.DOCKER_HOST_URL}</dockerHost>-->

					<!--&lt;!&ndash; We are using HTTPS, so we need certificates &ndash;&gt;-->
					<!--<dockerCertPath>${env.DOCKER_CERT_PATH}</dockerCertPath>-->

					<!--&lt;!&ndash; All images are dependent on Java 8 &ndash;&gt;-->
					<!--<baseImage>java:8</baseImage>-->

					<!--&lt;!&ndash; When we do "docker run imageName" within the docker instance &ndash;&gt;-->
					<!--&lt;!&ndash; It will run this as a command &ndash;&gt;-->
					<!--&lt;!&ndash; java -jar /opt/NameOfTheJar.jar &ndash;&gt;-->
					<!--<entryPoint>-->
						<!--["java", "-jar", "/opt/${project.build.finalName}.jar"]-->
					<!--</entryPoint>-->

					<!--&lt;!&ndash; There is something called Docker Hub &ndash;&gt;-->
					<!--&lt;!&ndash; You can push your images to the cloud for collaboration &ndash;&gt;-->
					<!--<pushImage>false</pushImage>-->

					<!--&lt;!&ndash; Resources &ndash;&gt;-->
					<!--<resources>-->
						<!--<resource>-->
							<!--<targetPath>/opt/</targetPath>-->
							<!--<directory>${project.build.directory}</directory>-->
							<!--<excludes>-->
								<!--<exclude>target/**/*</exclude>-->
								<!--<exclude>pom.xml</exclude>-->
								<!--<exclude>*.iml</exclude>-->
							<!--</excludes>-->
							<!--<include>${project.build.finalName}.jar</include>-->
						<!--</resource>-->
					<!--</resources>-->
				<!--</configuration>-->
			<!--</plugin>-->

			<!-- CodeHaus MOJO -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<!-- Change this to match path to actual Main class -->
					<mainClass>com.revature.gambit.gateway.Application</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>